{"version":3,"sources":["index.js"],"names":["Tabs","constructor","rootSelector","activeControlClass","activePaneClass","activeTab","_refs","_getRefs","_activeControlClass","_activePaneClass","_activeTabIdx","_bindEvents","_setActiveTab","root","refs","controls","document","querySelector","panes","addEventListener","_onControlsClick","bind","event","target","nodeName","currentActiveControlItem","classList","remove","paneId","_getPaneId","_removeActivePain","controlItem","add","_setActivePane","controlItems","control","querySelectorAll","console","log","_getPaneById","getAttribute","slice","id","tabs1"],"mappings":";;;AAsIA,aAtIA,QAAA,oBAEA,MAAMA,EACFC,aAAY,aAACC,EAAD,mBACRC,EAAqB,SADb,gBAERC,EAAkB,SAFV,UAGRC,EAAY,IAEPC,KAAAA,MAAQ,KAAKC,SAASL,GACtBM,KAAAA,oBAAsBL,EACtBM,KAAAA,iBAAmBL,EACnBM,KAAAA,cAAgBL,EAAW,EAE3BM,KAAAA,cACAC,KAAAA,gBAGTL,SAAUM,GACAC,MAAAA,EAAO,GAKNA,OAHPA,EAAKC,SAAWC,SAASC,iBAAiBJ,qBAC1CC,EAAKI,MAAQF,SAASC,iBAAiBJ,kBAEhCC,EAGXH,cACSL,KAAAA,MAAMS,SAASI,iBAAiB,QAAS,KAAKC,iBAAiBC,KAAK,OAG7ED,iBAAkBE,GACVA,GAAyB,MAAzBA,EAAMC,OAAOC,SAChB,OAGCC,MAAAA,EAA2B,KAAKnB,MAAMS,SAASE,kBAAkB,KAAKT,uBAGzEiB,GAAAA,EAA0B,CACxBA,EAAyBC,UAAUC,OAAO,KAAKnB,qBAE1CoB,MAAAA,EAAU,KAAKC,WAAWJ,GAC3BK,KAAAA,kBAAkBF,GAKrBG,MAAAA,EAAcT,EAAMC,OAC1BQ,EAAYL,UAAUM,IAAI,KAAKxB,qBAEzBoB,MAAAA,EAAS,KAAKC,WAAWE,GAC1BE,KAAAA,eAAeL,GAGnBhB,gBACUsB,MACAC,EADe,KAAK7B,MAAMS,SAASqB,iBAAiB,KAC7B,KAAK1B,eAClCyB,EAAQT,UAAUM,IAAI,KAAKxB,qBAErBoB,MAAAA,EAAS,KAAKC,WAAWM,GAC1BF,KAAAA,eAAeL,GAGpBS,QAAQC,IAAKH,GAGjBF,eAAeL,GACC,KAAKW,aAAaX,GAC1BF,UAAUM,IAAI,KAAKvB,kBAI5BqB,kBAAmBF,GACF,KAAKW,aAAaX,GAC1BF,UAAUC,OAAO,KAAKlB,kBAI/BoB,WAAYM,GACDA,OAAAA,EAAQK,aAAa,QAAQC,MAAM,GAG9CF,aAAcG,GACC,OAAA,KAAKpC,MAAMY,MAAMD,kBAAkByB,MAKtD,MAAMC,EAAQ,IAAI3C,EAAK,CACnBE,aAAc,UACdC,mBAAoB,yBACpBC,gBAAiB,eACjBC,UAAW,IAEfgC,QAAQC,IAAIK","file":"src.8654adf2.js","sourceRoot":"../src","sourcesContent":["import './sass/main.scss';\n\nclass Tabs {\n    constructor({rootSelector, \n        activeControlClass = 'active',\n        activePaneClass = 'active',\n        activeTab = 1,\n    }) {\n        this._refs = this._getRefs(rootSelector);\n        this._activeControlClass = activeControlClass;\n        this._activePaneClass = activePaneClass;\n        this._activeTabIdx = activeTab -1;\n\n        this._bindEvents();\n        this._setActiveTab ();\n    }\n\n    _getRefs (root) {\n        const refs = {};\n\n        refs.controls = document.querySelector(`${root} [data-controls]`);\n        refs.panes = document.querySelector(`${root} [data-panes]`);\n\n        return refs;\n    }\n\n    _bindEvents() {\n        this._refs.controls.addEventListener('click', this._onControlsClick.bind(this));\n    }\n\n    _onControlsClick (event) {\n        if (event.target.nodeName !=='A')  {\n         return;\n        }\n\n    const currentActiveControlItem = this._refs.controls.querySelector(`.${this._activeControlClass}`,\n    );\n\n    if(currentActiveControlItem) {\n         currentActiveControlItem.classList.remove(this._activeControlClass);\n        \n        const paneId =  this._getPaneId(currentActiveControlItem);\n        this._removeActivePain(paneId);\n        //console.log(pane);\n          }\n         \n\n    const controlItem = event.target;\n    controlItem.classList.add(this._activeControlClass);\n\n    const paneId = this._getPaneId(controlItem);\n    this._setActivePane(paneId);\n     }\n\n     _setActiveTab () {\n         const controlItems = this._refs.controls.querySelectorAll('a');\n         const control = controlItems[this._activeTabIdx];\n         control.classList.add(this._activeControlClass);\n\n         const paneId = this._getPaneId(control);\n         this._setActivePane(paneId);\n\n         \n         console.log (control);\n     }\n\n     _setActivePane(paneId) {\n        const pane = this._getPaneById(paneId);\n        pane.classList.add(this._activePaneClass);\n\n     }\n\n    _removeActivePain (paneId) {\n        const pane = this._getPaneById(paneId);\n        pane.classList.remove(this._activePaneClass);\n    }\n\n\n    _getPaneId (control) {\n        return control.getAttribute('href').slice(1);\n        }\n        \n    _getPaneById (id) {\n            return this._refs.panes.querySelector(`#${id}`);\n        }\n        \n}\n\nconst tabs1 = new Tabs({\n    rootSelector: '#tabs-1',\n    activeControlClass: 'controls__item--active',\n    activePaneClass: 'pane--active',\n    activeTab: 2,\n});\nconsole.log(tabs1)\n\n// const refs = {\n//     controls: document.querySelector('#tabs-1 [data-controls]'),\n//     panes: document.querySelector('#tabs-1 [data-panes]'),\n// };\n\n// refs.controls.addEventListener('click', event => {\n//   if (event.target.nodeName !=='A')  {\n//       return;\n//   }\n//   const currentActiveControlItem = refs.controls.querySelector('.controls__item--active');\n  \n\n//   if(currentActiveControlItem) {\n//       currentActiveControlItem.classList.remove('controls__item--active');\n\n//       const paneId =  getPaneId(currentActiveControlItem);\n//       //console.log(paneId);\n\n//       const pane = getPaneById(paneId);\n//       pane.classList.remove('pane--active');\n\n//   }\n\n//   const controlItem = event.target;\n//   controlItem.classList.add('controls__item--active');\n\n//   const paneId = getPaneId(controlItem);\n//   const pane = getPaneById(paneId);\n \n//   pane.classList.add('pane--active');\n// });\n\n// function getPaneId (control) {\n// return control.getAttribute('href').slice(1);\n// }\n\n// function getPaneById (id) {\n//     return refs.panes.querySelector(`#${id}`);\n// }"]}